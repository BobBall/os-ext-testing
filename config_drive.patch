commit c474ab73f9210c8996629c1fb3b4dc95747b8f33
Author: Bob Ball <bob.ball@citrix.com>
Date:   Fri Feb 13 15:06:25 2015 +0000

    Add support for requsting that config drive be used.
    
    If you want to use config drive in RAX this is required as the default
    is to use an agent.
    
    Change-Id: Ic1a60fc76f34b831eb86c87453d3aa97cf55f1f1

diff --git a/nodepool/nodepool.py b/nodepool/nodepool.py
index 6926c5c..0364b79 100644
--- a/nodepool/nodepool.py
+++ b/nodepool/nodepool.py
@@ -386,7 +386,8 @@ class NodeLauncher(threading.Thread):
                                            self.image.name, self.node_id))
         server_id = self.manager.createServer(
             hostname, self.image.min_ram, snap_image.external_id,
-            name_filter=self.image.name_filter, az=self.node.az)
+            name_filter=self.image.name_filter, az=self.node.az,
+            config_drive=self.image.config_drive)
         self.node.external_id = server_id
         session.commit()
 
@@ -658,7 +659,8 @@ class SubNodeLauncher(threading.Thread):
                          self.image.name, self.subnode_id, self.node_id))
         server_id = self.manager.createServer(
             hostname, self.image.min_ram, snap_image.external_id,
-            name_filter=self.image.name_filter, az=self.node_az)
+            name_filter=self.image.name_filter, az=self.node_az,
+            config_drive=self.image.config_drive)
         self.subnode.external_id = server_id
         session.commit()
 
@@ -972,7 +974,7 @@ class SnapshotImageUpdater(ImageUpdater):
             server_id = self.manager.createServer(
                 hostname, self.image.min_ram, image_name=image_name,
                 key_name=key_name, name_filter=self.image.name_filter,
-                image_id=image_id)
+                image_id=image_id, config_drive=self.image.config_drive)
         except Exception:
             if (self.manager.hasExtension('os-keypairs') and
                 not self.provider.keypair):
@@ -1292,6 +1294,7 @@ class NodePool(threading.Thread):
                 i.user_home = image.get('user-home', '/home/jenkins')
                 i.private_key = image.get('private-key',
                                           '/var/lib/jenkins/.ssh/id_rsa')
+                i.config_drive = image.get('config-drive', None)
 
                 # note this does "double-duty" -- for
                 # SnapshotImageUpdater the meta-data dict is passed to
@@ -1404,7 +1407,8 @@ class NodePool(threading.Thread):
                 new_images[k].username != old_images[k].username or
                 new_images[k].user_home != old_images[k].user_home or
                 new_images[k].private_key != old_images[k].private_key or
-                new_images[k].meta != old_images[k].meta):
+                new_images[k].meta != old_images[k].meta or
+                new_images[k].config_drive != old_images[k].config_drive):
                 return False
         return True
 
diff --git a/nodepool/provider_manager.py b/nodepool/provider_manager.py
index 7c7e557..334d18a 100644
--- a/nodepool/provider_manager.py
+++ b/nodepool/provider_manager.py
@@ -408,11 +408,13 @@ class ProviderManager(TaskManager):
         return self.submitTask(DeleteKeypairTask(name=name))
 
     def createServer(self, name, min_ram, image_id=None, image_name=None,
-                     az=None, key_name=None, name_filter=None):
+                     az=None, key_name=None, name_filter=None,
+                     config_drive=None):
         if image_name:
             image_id = self.findImage(image_name)['id']
         flavor = self.findFlavor(min_ram, name_filter)
-        create_args = dict(name=name, image=image_id, flavor=flavor['id'])
+        create_args = dict(name=name, image=image_id, flavor=flavor['id'],
+                           config_drive=config_drive)
         if key_name:
             create_args['key_name'] = key_name
         if az:
