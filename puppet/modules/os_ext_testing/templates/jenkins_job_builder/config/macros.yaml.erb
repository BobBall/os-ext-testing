- builder:
    name: devstack-checkout
    builders:
      - shell: |
          #!/bin/bash -xe
          if [[ ! -e devstack-gate ]]; then
              git clone git://git.openstack.org/openstack-infra/devstack-gate
          else
              cd devstack-gate
              git remote set-url origin git://git.openstack.org/openstack-infra/devstack-gate
              git remote update
              git reset --hard
              if ! git clean -x -f ; then
                  sleep 1
                  git clean -x -f
              fi
              git checkout master
              git reset --hard remotes/origin/master
              if ! git clean -x -f ; then
                  sleep 1
                  git clean -x -f
              fi
              cd ..
          fi

- builder:
    name: devstack-checkout-http
    builders:
      - shell: |
          #!/bin/bash -xe
          if [[ ! -e devstack-gate ]]; then
              git clone http://git.openstack.org/openstack-infra/devstack-gate
          else
              cd devstack-gate
              git remote set-url origin http://git.openstack.org/openstack-infra/devstack-gate
              git remote update
              git reset --hard
              if ! git clean -x -f ; then
                  sleep 1
                  git clean -x -f
              fi
              git checkout master
              git reset --hard remotes/origin/master
              if ! git clean -x -f ; then
                  sleep 1
                  git clean -x -f
              fi
              cd ..
          fi

- builder:
    name: python-install-from-zuul
    builders:
      - shell: |
          #!/bin/bash -xe
          # Install the client from the patch
          git clone $ZUUL_URL/$ZUUL_PROJECT
          cd $ZUUL_PROJECT
          git fetch $ZUUL_URL/$ZUUL_PROJECT $ZUUL_REF
          git checkout FETCH_HEAD
          sudo python setup.py install

#TODO: Make this configurable for alternative mirrors
- builder:
    name: gozer-pypi-setup
    builders:
      - shell: |
          #!/bin/bash -xe
          echo "Using pypi mirror  http://pypi.gozer.hpcloud.net/openstack/latest"
          cat <<EOF > ~/.pydistutils.cfg
          [easy_install]
          index_url = http://pypi.gozer.hpcloud.net/latest
          EOF

          sudo mkdir -p ~/.pip/
          cat <<EOF > ~/.pip/pip.conf
          [global]
          proxy = http://proxy.houston.hp.com:8080/
          index-url = http://pypi.gozer.hpcloud.net/latest
          extra-index-url = http://pypi.python.org/simple
          timeout = 90

          [install]
          trusted-host=
              pypi.gozer.hpcloud.net
              pypi.python.org
          EOF

          # Make sure the top level pip configuration also has this file
          sudo cp ~/.pip/pip.conf /etc/pip.conf

- builder:
    name: link-logs
    builders:
      - shell: |
          #!/bin/sh
<% if upstream_gerrit_baseurl != "" -%>
          echo "Triggered by: <%= @upstream_gerrit_baseurl %>/$ZUUL_CHANGE patchset $ZUUL_PATCHSET"
<% else -%>
          echo "Triggered by: https://<%= @upstream_gerrit_server %>/$ZUUL_CHANGE patchset $ZUUL_PATCHSET"
<% end -%>

          echo "Detailed logs: http://<%= @log_root_url %>/$LOG_PATH/"

- publisher:
    name: coverage-log
    publishers:
      - scp:
          site: 'LogServer'
          files:
            - target: 'logs/$LOG_PATH'
              source: 'cover/**'
              keep-hierarchy: true
              copy-after-failure: true

- publisher:
    name: console-log
    publishers:
      - scp:
          site: 'LogServer'
          files:
            - target: 'logs/$LOG_PATH'
              copy-console: true
              copy-after-failure: true

- publisher:
    name: devstack-logs
    publishers:
      - scp:
          site: 'LogServer'
          files:
            - target: 'logs/$LOG_PATH'
              source: 'logs/**'
              keep-hierarchy: true
              copy-after-failure: true

- publisher:
    name: devstack-logs-local
    publishers:
      - copy-to-master:
            includes:
              - 'logs/**'
            destination: '/tmp/$BUILD_TAG'

- builder:
    name: net-info
    builders:
      - shell: |
          #!/bin/sh
          export PATH=$PATH:/sbin
          echo "Network interface addresses..."
          ip address show
          echo "Network routing tables..."
          ip route show
          ip -6 route show
          echo "Network neighbors..."
          ip neighbor show

- builder:
    name: zuul-swift-upload
    builders:
      - shell: "/usr/zuul-swift-logs-env/bin/python /usr/local/jenkins/slave_scripts/zuul_swift_upload.py --name {zuul_log_instruction_set} {upload_source}"


- builder:
    name: zuul-swift-upload-logs
    builders:
      - zuul-swift-upload:
         zuul_log_instruction_set: logs
         upload_source: '{upload_source}'


- builder:
    name: zuul-swift-upload-console-log
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/grab_console_log.sh"
      - zuul-swift-upload-logs:
         upload_source: '/tmp/console.html'


- builder:
    name: zuul-swift-upload-logs-with-console
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/grab_console_log.sh"
      - zuul-swift-upload-logs:
         upload_source: '{upload_source} /tmp/console.html'

- publisher:
    name: zuul-swift-upload
    publishers:
      - postbuildscript:
          builders:
            - zuul-swift-upload:
                zuul_log_instruction_set: '{zuul_log_instruction_set}'
                upload_source: '{upload_source}'
          # These flags really mean only if on * when
          # checked. When both set to false the post script
          # should run on every job regardless of status.
          onfailure: False
          onsuccess: False

- publisher:
    name: zuul-swift-upload-logs
    publishers:
      - postbuildscript:
          builders:
            - zuul-swift-upload-logs:
                upload_source: '{upload_source}'
          # These flags really mean only if on * when
          # checked. When both set to false the post script
          # should run on every job regardless of status.
          onfailure: False
          onsuccess: False

- publisher:
    name: zuul-swift-upload-console-log
    publishers:
      - postbuildscript:
          builders:
            - zuul-swift-upload-console-log
          # These flags really mean only if on * when
          # checked. When both set to false the post script
          # should run on every job regardless of status.
          onfailure: False
          onsuccess: False


- publisher:
    name: zuul-swift-upload-logs-with-console
    publishers:
      - postbuildscript:
          builders:
            - zuul-swift-upload-logs-with-console:
                upload_source: '{upload_source}'
          # These flags really mean only if on * when
          # checked. When both set to false the post script
          # should run on every job regardless of status.
          onfailure: False
          onsuccess: False

- publisher:
    name: zuul-swift-devstack-logs
    publishers:
      - zuul-swift-upload-logs:
          upload_source: 'logs'

- builder:
    name: osci-swift-upload-logs-with-console
    builders:
      - shell: "/usr/local/jenkins/slave_scripts/grab_console_log.sh"
      - shell: |
          #!/bin/sh
          virtualenv osci-env
          . osci-env/bin/activate
          git clone https://github.com/citrix-openstack/openstack-citrix-ci openstack-citrix-ci
          pip install -r openstack-citrix-ci/requirements.txt
          pip install -e openstack-citrix-ci
          # CA bundle in 2.5.2 is broken
          pip install --upgrade requests>2.5.2
          sudo mkdir -p /etc/osci/
          cat | sudo tee /etc/osci/osci.config >/dev/null << EOF
          SWIFT_API_KEY=<%= @swift_api_key %>
          SWIFT_USERNAME=<%= @swift_api_user %>
          SWIFT_REGION=IAD
          SWIFT_CONTAINER=XenLogs
          EOF
          osci-upload /tmp/console.html {upload_source} $LOG_PATH


- publisher:
    name: osci-swift-upload-logs-with-console
    publishers:
      - postbuildscript:
          builders:
            - osci-swift-upload-logs-with-console:
                upload_source: '{upload_source}'
          # These flags really mean only if on * when
          # checked. When both set to false the post script
          # should run on every job regardless of status.
          onfailure: False
          onsuccess: False
